//abstract data types are useful if you have a very deep connection XD with how things work.
//basically if you want to implement your own array,stack,heap,queue or anything use ADT 
// so to summarise i would say ADT -->our sructure+our own features of it 
abstraction -- hiding details and only providing functionality.
//next is how we implement we can use classes or structs.
now, lets start how we are going to implement our structure first
as an array we know it has some basic properties like total_size,base_address-->how we extract the elements;
also its used_size can be implemeted too[to check various condtions like if its full basically]
so we are going to have a struct storing these properties 
and then a pointer to that struct which uses the properties we give to our structure.
then we can just use a pointer to the struct to create as an array to store elements.
next would be to define member functions like .get[*[base_address+elementno]],.set[.get[],some_value],
.add,.resize[using new struct],.insert[idk],.delete[idk];
and this summaries the lecture but it was good anyway.
// i would say codewithharry is best like really best

//i need more practice on Pointers but yeah they are good and i'm loving it.